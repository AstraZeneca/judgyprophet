name: Python package
on:
  push:
    branches:
      - "main"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      matrix:
        python-version: [3.8.x, 3.9.x]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Install pip and pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install poetry
          poetry config virtualenvs.create false && poetry install
          poetry install
      - name: Compile JudgyProphet
        run: poetry run python -c "from judgyprophet import JudgyProphet; JudgyProphet().compile()"
      - name: Test with pytest
        run: poetry run pytest tests/ --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
